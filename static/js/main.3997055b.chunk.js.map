{"version":3,"sources":["Components/Slides/Slide1/Slide1.jsx","Components/Slides/Slide2/Slide2.jsx","Components/Slider/Slider.jsx","Components/Slides/Slide3/Slide3.jsx","Components/Slides/Slides.jsx","Components/NavBar/NavBar.jsx","App.js","serviceWorker.js","index.js"],"names":["Slide1","props","className","Slide2","BaseSlider","useState","sliderState","setSliderState","sliderPos","setSliderPos","schemeOneRef","useRef","current","style","transform","schemePosition","ref","onValuesUpdated","value","currentValue","values","onSliderDragEnd","console","log","document","getElementsByClassName","transition","onSliderDragStart","Slide3","Slides","id","NavBar","p0ref","p1ref","p2ref","useEffect","touchStartY","touchEndY","slides_wrapper","getElementById","p0","p1","p2","currentSlide","Update","backgroundColor","opacity","display","window","addEventListener","e","touches","clientY","changedTouches","target","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3997055b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Slide1.css\";\r\n\r\nconst Slide1 = props => {\r\n    return (\r\n        <div className=\"wrapper_slide1 slide\">\r\n            <div className=\"slide1_head\">\r\n                Всегда ли цели терапии СД2\r\n                <br />\r\n                на поверхности?\r\n            </div>\r\n            <div className=\"text1\">\r\n                Цель по HbA1c\r\n            </div>\r\n            <div className=\"text2\">\r\n                Гипогликемия\r\n            </div>\r\n            <div className=\"text3\">\r\n                СС риски\r\n            </div>\r\n            <div className=\"text4\">\r\n                Осложнения СД\r\n            </div>\r\n            <div className=\"circle1\">\r\n            </div>\r\n\r\n            <div className=\"circles\">\r\n                <div className=\"circle_1 pulse\">\r\n                    <div className=\"circle_1_wrap wrap\">\r\n                        <div className=\"circle_1_circle circumference\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"circle_2 pulse\">\r\n                    <div className=\"circle_2_wrap wrap\">\r\n                        <div className=\"circle_2_circle circumference\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"circle_3 pulse\">\r\n                    <div className=\"circle_3_wrap wrap\">\r\n                        <div className=\"circle_3_circle circumference\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"circle_4 pulse\">\r\n                    <div className=\"circle_4_wrap wrap\">\r\n                        <div className=\"circle_4_circle circumference\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Slide1;\r\n","import React from \"react\";\r\nimport \"./Slide2.css\";\r\n\r\nconst Slide2 = props => {\r\n  return (\r\n    <div className=\"wrapper_slide2 slide\">\r\n      <div className=\"text\">\r\n        Основа терапии –\r\n        <br />\r\n        патогенез СД2\r\n      </div>\r\n      <div className=\"wrapper_ice_slide2\">\r\n        <div className=\"slide2_ice1\"></div>\r\n        <div className=\"slide2_ice2\"></div>\r\n        <div className=\"slide2_ice3\"></div>\r\n        <div className=\"slide2_ice4\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slide2;\r\n","import React, { useState, useRef } from \"react\";\r\nimport \"./Slider.css\";\r\nimport Rheostat from \"rheostat\";\r\nimport \"rheostat/initialize\";\r\n\r\nconst BaseSlider = () => {\r\n  const [sliderState, setSliderState] = useState(2);\r\n  const [sliderPos, setSliderPos] = useState([100]);\r\n\r\n  const handleSliderMove = value => {\r\n    const currentValue = value.values[0] && value.values[0];\r\n    setSliderPos([currentValue]);\r\n\r\n    sliderState !== 0 && currentValue <= 33 && setSliderState(0);\r\n    sliderState !== 1 &&\r\n      currentValue >= 33 &&\r\n      currentValue <= 66 &&\r\n      setSliderState(1);\r\n    sliderState !== 2 && currentValue >= 66 && setSliderState(2);\r\n  };\r\n\r\n  const handleOnBeforeChange = () => {\r\n    document.getElementsByClassName('DefaultHandle_handle')[0].style.transition = \"all 0s\";\r\n    document.getElementsByClassName('DefaultProgressBar_progressBar')[0].style.transition = \"all 0s\";\r\n  };\r\n\r\n  const handleOnAfterChange = () => {\r\n    console.log(sliderPos[0]);\r\n\r\n    document.getElementsByClassName('DefaultHandle_handle')[0].style.transition = \"all 1s\";\r\n    document.getElementsByClassName('DefaultProgressBar_progressBar')[0].style.transition = \"all 1s\";\r\n    sliderPos <= 33 && setSliderPos([0]);\r\n    sliderPos >= 33 && sliderPos <= 66 && setSliderPos([50]);\r\n    sliderPos >= 66 && setSliderPos([100]);\r\n  };\r\n\r\n  const schemePosition = () => {\r\n    switch (sliderState) {\r\n      case 0:\r\n        schemeOneRef.current.style.transform = \"translateX(0)\";\r\n        break;\r\n      case 1:\r\n        schemeOneRef.current.style.transform = \"translate(-1024px)\";\r\n        break;\r\n      case 2:\r\n        schemeOneRef.current.style.transform = \"translateX(-2048px)\";\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const schemeOneRef = useRef();\r\n\r\n  return (\r\n    <div className=\"slider_div\">\r\n      {schemeOneRef.current && schemePosition()}\r\n      <div className=\"scheme-wrapper\" ref={schemeOneRef}>\r\n        <div className=\"scheme-1 scheme\">\r\n          <div className=\"ice1_wrapper\">\r\n            <div className=\"ice1_1\"></div>\r\n            <div className=\"ice1_2\"></div>\r\n            <div className=\"ice1_3\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"scheme-2 scheme\">\r\n          <div className=\"ice2_wrapper\">\r\n            <div className=\"ice2_1\"></div>\r\n            <div className=\"ice2_2\"></div>\r\n            <div className=\"ice2_3\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"scheme-3 scheme\">\r\n          <div className=\"ice3_wrapper\">\r\n            <div className=\"ice3_1\"></div>\r\n            <div className=\"ice3_2\"></div>\r\n            <div className=\"ice3_3\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Rheostat\r\n        onValuesUpdated={handleSliderMove}\r\n        values={sliderPos}\r\n        onSliderDragEnd={handleOnAfterChange}\r\n        onSliderDragStart={handleOnBeforeChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BaseSlider;\r\n","import React from \"react\";\r\nimport \"./Slide3.css\";\r\nimport BaseSlider from \"../../Slider/Slider\";\r\n\r\nconst Slide3 = props => {\r\n  return (\r\n    <div className=\"wrapper_slide3 slide\">\r\n      <div className=\"scroll_line\"></div>\r\n      <BaseSlider />\r\n      <div className=\"date_wrapper\">\r\n        <div className=\"date1\">1998</div>\r\n        <div className=\"date2\">2009</div>\r\n        <div className=\"date3\">2016</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slide3;\r\n","import React from \"react\";\r\nimport \"./Slides.css\";\r\nimport Slide1 from \"./Slide1/Slide1\";\r\nimport Slide2 from \"./Slide2/Slide2\";\r\nimport Slide3 from \"./Slide3/Slide3\";\r\n\r\nconst Slides = props => {\r\n  return (\r\n    <div className=\"slides_wrapper\" id=\"slides_wrapper\" >\r\n      <Slide1 />\r\n      <Slide2 />\r\n      <Slide3 />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slides;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./NavBar.css\";\r\nimport { useRef } from \"react\";\r\n\r\nconst NavBar = props => {\r\n  const p0ref = useRef();\r\n  const p1ref = useRef();\r\n  const p2ref = useRef();\r\n\r\n  useEffect(() => {\r\n    const slides_wrapper = document.getElementById(\"slides_wrapper\");\r\n    const p0 = p0ref.current;\r\n    const p1 = p1ref.current;\r\n    const p2 = p2ref.current;\r\n    let touchStartY;\r\n    let touchEndY;\r\n    let currentSlide = 0;\r\n\r\n    const Update = currentSlide => {\r\n      slides_wrapper.style.transform = `translateY(-${currentSlide * 768}px)`;\r\n      p0.style.backgroundColor = \"white\";\r\n      p1.style.backgroundColor = \"white\";\r\n      p2.style.backgroundColor = \"white\";\r\n\r\n      if (currentSlide === 0) {\r\n        document.getElementById(\"scroll_down\").style.opacity = 1;\r\n        p0ref.current.style.backgroundColor = \"#f17900\";\r\n        p1ref.current.style.backgroundColor = \"#fff\";\r\n      } else if (currentSlide === 2) {\r\n        document.getElementById(\"scroll_down\").style.display = \"none\";\r\n        p0ref.current.style.backgroundColor = \"#fff\";\r\n        p1ref.current.style.backgroundColor = \"#fff\";\r\n        p2ref.current.style.backgroundColor = \"#f17900\";\r\n      } else if (currentSlide === 1) {\r\n        document.getElementById(\"scroll_down\").style.display = \"block\";\r\n        document.getElementById(\"scroll_down\").style.opacity = 0;\r\n        p0ref.current.style.backgroundColor = \"#fff\";\r\n        p1ref.current.style.backgroundColor = \"#f17900\";\r\n        p2ref.current.style.backgroundColor = \"#fff\";\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"touchstart\", e => {\r\n      touchStartY = e.touches[0].clientY;\r\n    });\r\n\r\n    window.addEventListener(\"touchend\", e => {\r\n      if (\r\n        e.changedTouches[0].target ===\r\n        document.getElementsByClassName(\"DefaultHandle_handle\")[0] // не трогаем свайп на слайдере\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      touchEndY = e.changedTouches[0].clientY;\r\n      if (touchStartY - touchEndY > 50 && currentSlide <= 1) {\r\n        currentSlide += 1;\r\n        Update(currentSlide);\r\n      }\r\n      if (touchStartY - touchEndY < -50 && currentSlide >= 1) {\r\n        currentSlide -= 1;\r\n        Update(currentSlide);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"point0 bar\" ref={p0ref} ></div>\r\n      <div className=\"point1 bar\" ref={p1ref} ></div>\r\n      <div className=\"point2 bar\" ref={p2ref} ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Slides from \"./Components/Slides/Slides\";\r\nimport NavBar from \"./Components/NavBar/NavBar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"content\">\r\n        <NavBar />\r\n        <Slides />\r\n        <div className=\"scroll_down\" id=\"scroll_down\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}